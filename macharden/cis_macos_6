#!/bin/sh --debug
PATH=$PATH:/bin:/usr/bin:/sbin:/usr/sbin
automatic=$1
options=$2
menu1=0;menu2=0;menu3=0;menu4=0;menu5=0;menu6=0;menu7=0;menu8=0;menu9=0
flag1=0;flag2=0;flag3=0;flag4=0;flag5=0;flag6=0;flag7=0;flag8=0;flag9=0
if test "$automatic" = "1"
then
	if test "$options" = "1"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1; menu9=1
    elif test "$options" = "2"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1; menu9=1
    else
        echo "exited in parsing options in section 9 menus"
        exit
    fi
fi

until test "$console_in" = "0"
do
    #clear
    echo "        CIS MACOS Benchmark v2.0"
    echo "             Section 6  Menu"
    echo 
    if test "$menu1" = 1 
    then
        echo "_X_ (1) 6.1 Enforce screensaver"
    else
        echo "___ (1) 6.1 Enforce screensaver"
    fi
    if test "$menu2" = 1 
    then
        echo "_X_ (2) 6.2 Enable IPV6"
    else
        echo "___ (2) 6.2 Enable IPV6"
    fi
    if test "$menu3" = 1 
    then
        echo "_X_ (3) 6.3 Disable Wi-Fi"
    else
        echo "___ (3) 6.3 Disable Wi-Fi"
    fi
    if test "$menu4" = 1 
    then
    echo "_X_ (3) 6.4 Enforce UserID password complexity(lower case/upper case/digit/other character)"
    else
    echo "___ (3) 6.4 Enforce UserID password complexity(lower case/upper case/digit/other character)"
    fi
    if test "$menu5" = 1 
    then
    echo "_X_ (5) 6.5 enforce mesg n to all users"
    else
    echo "___ (5) 6.5 enforce mesg n to all users"
    fi
    if test "$menu6" = 1 
    then
    echo "_X_ (6) 6.6 hardening /etc/aliases"
    else
    echo "___ (6) 6.6 hardening /etc/aliases"
    fi
    if test "$menu7" = 1 
    then
    echo "_X_ (7) 6.7 setup lhc ntp configuration"
    else
    echo "___ (7) 6.7 setup lhc ntp configuration"
    fi
    echo "    (0)  Back to Main Menu"
    echo " Selection => "
    if  test "$automatic" = "1"
    then
        echo "automatic opted"
    else
        read console_in
    fi   

    if ((test "$console_in" = "1" || test "$menu1" = "1" ) && ( test "$flag1" != "1") )
    then
        osascript -e 'tell application "System Events" to set require password to wake of security preferences to true'  &> /dev/null
        echo "Section 6.1 completed."
        menu1=1
	    flag1=1
    fi

    if ((test "$console_in" = "2" || test "$menu2" = "1" ) && ( test "$flag2" != "1") )
    then
        networksetup -setv6automatic "Ethernet"  &> /dev/null
        networksetup -setv6automatic "Ethernet 1" &> /dev/null
        echo "Section 6.2 completed."
        menu2=1
	    flag2=1
    fi

    if ((test "$console_in" = "3" || test "$menu8" = "3" ) && ( test "$flag3" != "1") )
    then
        networksetup -setairportpower airport off
        echo "Section 6.3 completed."
        menu8=1
        flag8=1
    fi

	if ((test "$console_in" = "4" || test "$menu4" = "1" ) && ( test "$flag4" != "1") )
   then
   ###
#### pwpolicy should not be needed with AD-bound accounts, which is the standard 
### pwpolicy -u $USER -setpolicy “minChars=15 requiresAlpha=1 requiresNumeric=1 maxMinutesUntilChangePassword=129600 usingHistory=3 maxFailedLoginAttempts=0”
### pwpolicy -u $USER -setpolicy “minChars=15 requiresAlpha=1 requiresNumeric=1"
#######
        echo "Section 6.4 completed."
        menu4=1
	    flag4=1
    fi

	if ((test "$console_in" = "5" || test "$menu5" = "1" ) && ( test "$flag5" != "1") )
    then
	    for x in /etc/profile /etc/csh.login ; do
            sed -i'.preCIS' '/^mesg *.*$/d' $x && echo "mesg n" >>$x
    	done
        echo "Section 6.5 completed."
        menu5=1
	    flag5=1
    fi
   

    if ((test "$console_in" = "6" || test "$menu6" = "1" ) && ( test "$flag6" != "1") )
    then
        #sed 's/^decode:/#decode:/' /etc/aliases > /etc/aliases.cisNEW
        #mv /etc/aliases.cisNEW /etc/aliases
        #/usr/bin/newaliases>>/dev/null
        chmod 0644 /etc/aliases
        chown root:wheel /etc/aliases
        echo "Section 6.6 completed."
        menu6=1
        flag6=1
    fi

    if ((test "$console_in" = "7" || test "$menu7" = "1" ) && ( test "$flag7" != "1") )
    then
        cp /etc/ntp.conf /etc/ntp.confPreCIS
        echo "server lhcntp.nlm.nih.gov">/etc/ntp.conf
        # not needed for MacOS
    	#echo "driftfile /var/lib/ntp/drift">>/etc/ntp.conf
        echo "keys /etc/ntp/keys">>/etc/ntp.conf
        echo "trustedkey 15715 65533 65534" >> /etc/ntp.conf
        echo "disable monitor" >> /etc/ntp.conf
        # not needed for MacOS - see /etc/ntp-restrict.conf
    	#echo "restrict default kod nomodify notrap nopeer noquery" >> /etc/ntp.conf
    	#echo "restrict -6 default kod nomodify notrap nopeer noquery" >> /etc/ntp.conf
        mkdir -p /etc/ntp
        touch /etc/ntp/keys
        echo "15715 M lhctimekey">/etc/ntp/keys
        echo "65534 M keyofreq">>/etc/ntp/keys
    	echo "65533 M keyofcontrol">>/etc/ntp/keys
        echo "Section 6.7 completed."
        menu7=1
        flag7=1
    fi

if test "$automatic" = "1" 
then
console_in=0
fi

done
