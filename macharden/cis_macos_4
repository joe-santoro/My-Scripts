#!/bin/sh
PATH=$PATH:/bin:/usr/bin:/sbin:/usr/sbin
automatic=$1
options=$2

menu1=0; menu2=0; menu3=0; menu4=0; menu5=0; menu6=0; menu7=0; menu8=0; menu9=0; menu10=0
flag1=0; flag2=0; flag3=0; flag4=0; flag5=0; flag6=0; flag7=0; flag8=0; flag9=0; flag10=0
if test "$automatic" = "1"
then
    if test "$options" = "1"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1; menu8=1; menu9=1; menu10=1;
    elif test "$options" = "2"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1; menu8=1; menu9=1; menu10=1;
    else
        echo "exited in parsing options in section 6 menus"
        exit
    fi
fi


until test "$console_in" = "0"
do
    #clear
    echo "        CIS MACOS Benchmark v2.0"
    echo "             Section 4  Menu"
    echo 
    if test "$menu1" = 1 
    then
        echo "_X_ (1) 4.1 Verify passwd and group file permissions "
    else
        echo "___ (1) 4.1 Verify passwd and group file permissions "
    fi
    if test "$menu2" = 1 
    then
        echo "_X_ (2) 4.2 World-writable directories should have their sticky bit set "
    else
        echo "___ (2) 4.2 World-writable directories should have their sticky bit set "
    fi
    if test "$menu3" = 1 
    then
        echo "_X_ (3) 4.3 Find unauthorized world-writable files "
    else
        echo "___ (3) 4.3 Find unauthorized world-writable files "
    fi
    if test "$menu4" = 1 
    then
        echo "_X_ (4) 4.4 Find unauthorized SUID/SGID system executables "
    else
        echo "___ (4) 4.4 Find unauthorized SUID/SGID system executables "
    fi

    if test "$menu5" = 1
    then
        echo "_X_ (5) 4.5 No user dot-files should be world writable "
    else
        echo "___ (5) 4.5 No user dot-files should be world writable "
    fi
    if test "$menu6" = 1
    then
        echo "_X_ (6) 4.6 Remove user .netrc files "
    else
        echo "___ (6) 4.6 Remove user .netrc files "
    fi
    if test "$menu7" = 1
    then
        echo "_X_ (7) 4.7 Set default umask for users "
    else
        echo "___ (7) 4.7 Set default umask for users "
    fi

    echo "    (0)  Back to Main Menu"
    echo " Selection => "

    if test "$automatic" = "1"
    then
        echo "automatic opted"
    else
        read console_in
    fi   

    if ((test "$console_in" = "1" || test "$menu1" = "1" ) && ( test "$flag1" != "1") )
    then
        cd /etc 
        chown root:wheel passwd group 
        chmod 644 passwd group 
        echo "Section 4.1 completed."
        menu1=1
        flag1=1
    fi

    if ((test "$console_in" = "2" || test "$menu2" = "1" ) && ( test "$flag2" != "1") )
    then
        echo > /tmp/sec6_2.log
        for part in $(mount | awk '$4 ~ /hf/ { print $3 } ') ;
        do 
            find $part -xdev -type d \
                  \( -perm -0002 -a ! -perm -1000 \) -print >> /tmp/sec6_2.log
        done 
        
        cat /tmp/sec6_2.log
        echo; echo; echo "The result was also logged into /tmp/sec6_2.log."; echo
        echo "Section 4.2 completed."
        menu2=1
        flag2=1
    fi
    

    if ((test "$console_in" = "3" || test "$menu3" = "1" ) && ( test "$flag3" != "1") )
    then
        echo > /tmp/sec6_3.log
        for part in $(mount | awk '$4 ~ /hf/ { print $3 } ') ;
        do 
            find $part -xdev -perm -0002 -type f -print >> /tmp/sec6_3.log
        done 
        cat /tmp/sec6_3.log
        echo; echo; echo "The result was also logged into /tmp/sec6_3.log."; echo
        echo "Section 4.3 completed."
        menu3=1
        flag3=1
    fi

    if ((test "$console_in" = "4" || test "$menu4" = "1" ) && ( test "$flag4" != "1") )
    then
        echo > /tmp/sec6_4.log
        for part in $(mount | awk '$4 ~ /hf/ { print $3 } ') ;
        do 
            find $part -xdev \( -perm -04000 -o -perm -02000 \) \
                        -type f -print >> /tmp/sec6_4.log
        done 
        cat /tmp/sec6_4.log
        echo; echo; echo "The result was also logged into /tmp/sec6_4.log."; echo
        echo "Section 4.4 completed."
        menu4=1
        flag4=1
    fi

    if ((test "$console_in" = "5" || test "$menu5" = "1" ) && ( test "$flag5" != "1") )
    then
        users=$(dscl . list /Users | grep -v '^_')
        dirs=""
        for u in $users ; do
            d=$(dscl . -read "/Users/${u}" | awk '/^NFSHomeDirectory:/ { print $2 }')
            if [[ "$d" =~ ^/Users ]] ; then
                dirs="${dirs} ${d}"
            fi
        done
        for dir in $dirs
        do
            for file in $dir/.[A-Za-z0-9]*; do
            if [ ! -h "$file" -a -f "$file" ]; then
                chmod go-w "$file"
            fi
            done
        done
        echo "Section 4.5 completed."
        menu5=1
        flag5=1
    fi

    if ((test "$console_in" = "6" || test "$menu6" = "1" ) && ( test "$flag6" != "1") )
    then
        users=$(dscl . list /Users | grep -v '^_')
        dirs=""
        for u in $users ; do
            d=$(dscl . -read "/Users/${u}" | awk '/^NFSHomeDirectory:/ { print $2 }')
            if [[ "$d" =~ ^/Users ]] ; then
                dirs="${dirs} ${d}"
            fi
        done
        for dir in $dirs
        do
            rm -f $dir/.netrc  &> /dev/null
        done
        echo "Section 4.6 completed."
        menu6=1
        flag6=1
   fi

   if ((test "$console_in" = "7" || test "$menu7" = "1" ) && ( test "$flag7" != "1") )
   then
      cd /etc
      for file in profile csh.login csh.cshrc bashrc
      do
         if [ `egrep -c umask\.\*77 $file` -eq 0 ];
         then
            echo "umask 077" >> $file
         fi
         chown root:wheel $file
         chmod 444 $file
        done
        cd /var/root
        for file in /var/root/.bash_profile /var/root/.bashrc /var/root/.cshrc /var/root/.tcshrc
        do
            if [ -e $file ]; then
                if [ `egrep -c umask\.\*77 $file` -eq 0 ];
                then
                    echo "umask 077" >>$file
                    chown root:wheel $file
                    chmod 400 $file
                fi
            fi
        done
        echo "Section 4.7 completed."
        menu7=1
        flag7=1
    fi


    if test "$automatic" = "1" 
    then
        console_in=0
    fi

done
