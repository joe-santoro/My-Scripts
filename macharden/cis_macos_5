#!/bin/sh
currentDir=`pwd`

PATH=$PATH:/bin:/usr/bin:/sbin:/usr/sbin
automatic=$1
options=$2

menu1=0; menu2=0; menu3=0; menu4=0; menu5=0; menu6=0
menu7=0; menu8=0; menu9=0; menu10=0; menu11=0; menu12=0
flag1=0; flag2=0; flag3=0; flag4=0; flag5=0; flag6=0
flag7=0; flag8=0; flag9=0; flag10=0; flag11=0; flag12=0
if test "$automatic" = "1"
then
        if test "$options" = "1"
        then
	menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1
	menu7=1; menu8=1; menu9=1; menu11=1; menu12=1
        elif test "$options" = "2"
        then
	menu1=1; menu2=1; menu3=1; menu5=1; menu6=1
	menu7=1; menu8=1; menu9=1; menu11=1; menu12=1
        else
        echo "exited in parsing options in section 7 menus"
        exit
        fi
fi


until test "$console_in" = "0"
do
    #clear
    echo "        CIS MACOS Benchmark v2.0"
    echo "             Section 5  Menu"
    echo 
    if test "$menu1" = 1 
    then
        echo "_X_ (1) 5.1 Create symlinks for dangerous files "
    else
        echo "___ (1) 5.1 Create symlinks for dangerous files "
    fi
    if test "$menu2" = 1
    then
        echo "_X_ (2) 5.2 Create ftpusers files "
    else
        echo "___ (2) 5.2 Create ftpusers files "
    fi
    if test "$menu3" = 1 
    then
        echo "_X_ (3) 5.3 Restrict at/cron to authorized users "
    else
        echo "___ (3) 5.3 Restrict at/cron to authorized users "
    fi
    if test "$menu4" = 1 
    then
        echo "_X_ (4) 5.4 Restrict permissions on crontab files "
    else
        echo "___ (4) 5.4 Restrict permissions on crontab files "
    fi
    if test "$menu5" = 1 
    then
        echo "_X_ (5) 5.5 Create appropriate SSH/tty warning banners "
    else
        echo "___ (5) 5.5 Create appropriate SSH/tty warning banners "
    fi
    if test "$menu6" = 1 
    then
        echo "_X_ (6) 5.6 Install Policy Banner file for MacOS Login"
    else
        echo "___ (6) 5.6 Install Policy Banner file for MacOS Login"
    fi
    echo "    (0)  Back to Main Menu"
    echo " Selection => "
    if test "$automatic" = "1"
    then
        echo "automatic opted"
    else
        read console_in
    fi   

    if ((test "$console_in" = "1" || test "$menu1" = "1" ) && ( test "$flag2" != "1") )
    then
        for file in /var/root/.rhosts /var/root/.shosts /etc/hosts.equiv /etc/shosts.equiv 
        do 
            /bin/rm -f $file 
            ln -s /dev/null $file 
        done 
        echo "Section 5.1 completed."
        menu2=1
        flag2=1
    fi
    
    if ((test "$console_in" = "2" || test "$menu2" = "1" ) && ( test "$flag2" != "1") )
    then
        if [ -f "/etc/ftpusers" ] ; then
            cp /etc/ftpusers /etc/ftpusers.preCIS
            for name in $(dscacheutil -q user | grep name: | awk '{ print $2 }') 
            do 
                if [ $(id -u $name) -lt 500 ] 
                then 
		            sed "-i.$$" '/$name/d' /etc/ftpusers && echo $name >> /etc/ftpusers 
                fi 
                rm -f /etc/ftpusers.$$
            done 
#           chown root:root /etc/ftpusers 
#           chmod 600 /etc/ftpusers 
        fi
        echo "Section 5.2 completed."
        menu2=1
	    flag2=1
    fi

    if ((test "$console_in" = "3" || test "$menu5" = "1" ) && ( test "$flag5" != "1") )
    then
        mv /usr/lib/cron/cron.deny{,.preCIS} &> /dev/null
        mv /usr/lib/cron/at.deny{,.preCIS} &> /dev/null
        echo root > /usr/lib/cron/cron.allow 
        echo root > /usr/lib/cron/at.allow 
        chown root:wheel /usr/lib/cron/cron.allow /usr/lib/cron/at.allow 
        chmod 640 /usr/lib/cron/cron.allow /usr/lib/cron/at.allow 

        echo "Section 5.3 completed."
        menu3=1
        flag3=1
    fi

	if ((test "$console_in" = "4" || test "$menu4" = "1" ) && ( test "$flag4" != "1") )
    then
        chown -R root:wheel /usr/lib/cron/tabs
        chmod -R go-rwx /usr/lib/cron/tabs

        echo "Section 5.4 completed."
        menu4=1
        flag4=1
   fi

	if ((test "$console_in" = "5" || test "$menu5" = "1" ) && ( test "$flag5" != "1") )
   then
      echo "1. Create banners for console and X mode: "
cat > /etc/motd <<_EOF_
#####################################################################################################
#                      ***WARNING***                                                                #
# * This warning banner provides privacy and security notices consistent with applicable federal    #
#   laws, directives,and other federal guidance for accessing this Government system,               #
#   which includes                                                                                  #
#     (1) this computer network,                                                                    #
#     (2) all computers connected to this network, and                                              #
#     (3) all devices and storage media attached to this network or to a computer on this network.  #
# * This system is provided for Government-authorized use only.                                     #
# * Unauthorized or improper use of this system is prohibited and may result in disciplinary        #
#   action and/or civil and criminal penalties.                                                     #
# * Personal use of social media and networking sites on this system is limited as to not           #
#   interfere with official work duties and is subject to monitoring.                               #
# * By using this system, you understand and consent to the following:                              #
# * The Government may monitor, record, and audit your system usage, including usage of             #
#   personal devices and email systems for official duties or to conduct HHS business.              #
#   Therefore, you have no reasonable expectation of privacy regarding any communication or         #
#   data transiting or stored on this system.                                                       #
#   At any time, and for any lawful Government purpose, the government may monitor, intercept,      #
#   and search and seize any communication or data transiting or stored on this system.             #
# * Any communication or data transiting or stored on this system may be disclosed or used          #
#   for any lawful Government purpose.                                                              #
#####################################################################################################
_EOF_
        cp -f /etc/motd /etc/issue
        cp -f /etc/motd /etc/issue.net
	
        chown root:wheel /etc/motd /etc/issue /etc/issue.net 
        chmod 644 /etc/motd /etc/issue /etc/issue.net 
 
        sed -i'.preCIS' '/^#*Banner/d' /etc/ssh/sshd_config
        echo "Banner /etc/issue.net" >> /etc/ssh/sshd_config

        echo "Section 5.5 completed."
        menu5=1
        flag5=1
    fi

    if ((test "$console_in" = "6" || test "$menu6" = "1" ) && ( test "$flag6" != "1") )
    then
        PB="${currentDir}/PolicyBanner.rtf"
        cp "$PB" /Library/Security/PolicyBanner.rtf
        chown root:wheel /Library/Security/PolicyBanner.rtf
        # not sure why this file needs EXECUTE permissions, but according to Apple it does... see https://support.apple.com/en-us/HT202277
        chmod 755 /Library/Security/PolicyBanner.rtf 

        echo "Section 5.6 completed."
        menu6=1
        flag6=1
    fi

if test "$automatic" = "1" 
then
console_in=0
fi

done
