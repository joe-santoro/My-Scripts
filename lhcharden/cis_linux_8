#!/bin/sh
PATH=$PATH:/bin:/usr/bin:/sbin:/usr/sbin
if test $# = 1
then
    exit
fi
automatic=$1
options=$2
echo $automatic,$options
menu1=0; menu2=0; menu3=0; menu4=0; menu5=0; menu6=0; menu7=0
menu8=0; menu9=0; menu10=0; menu11=0
flag1=0; flag2=0; flag3=0; flag4=0; flag5=0; flag6=0; flag7=0
flag8=0; flag9=0; flag10=0; flag11=0

if test "$automatic" = "1"
then
    if test "$options" = "1"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1
	    menu8=1; menu9=1; menu10=1; menu11=1
    elif test "$options" = "2"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1
        menu8=1; menu9=1; menu10=1
    else
        echo "exited in parsing options in section 8 menus"
        exit
    fi
fi


until test "$console_in" = "0"
do
   #clear
    echo "        CIS LINUX Benchmark v2.0"
    echo "             Section 8  Menu"
    echo 
    if test "$menu1" = 1 
    then
        echo "_X_ (1) 8.1 Block system accounts "
    else
        echo "___ (1) 8.1 Block system accounts "
    fi
    if test "$menu2" = 1 
    then
        echo "_X_ (2) 8.2 Verify that there are no accounts with empty password fields "
    else
        echo "___ (2) 8.2 Verify that there are no accounts with empty password fields "
    fi
    if test "$menu3" = 1 
    then
        echo "_X_ (3) 8.3 Set account expiration parameters on active accounts "
    else
        echo "___ (3) 8.3 Set account expiration parameters on active accounts "
    fi
    if test "$menu4" = 1 
    then
        echo "_X_ (4) 8.4 Verify no legacy '+' entries exist in passwd, shadow, and group files "
    else
        echo "___ (4) 8.4 Verify no legacy '+' entries exist in passwd, shadow, and group files "
    fi
    if test "$menu5" = 1 
    then
        echo "_X_ (5) 8.5 Verify that no UID 0 accounts exist other than root "
    else
        echo "___ (5) 8.5 Verify that no UID 0 accounts exist other than root "
    fi
    if test "$menu6" = 1 
    then
        echo "_X_ (6) 8.6 No '.' or group/world-writable directory in root's \$PATH "
    else
        echo "___ (6) 8.6 No '.' or group/world-writable directory in root's \$PATH "
    fi
    if test "$menu7" = 1 
    then
        echo "_X_ (7) 8.7 User home directories should be mode 750 or more restrictive "
    else
        echo "___ (7) 8.7 User home directories should be mode 750 or more restrictive "
    fi
    if test "$menu8" = 1 
    then
        echo "_X_ (8) 8.8 No user dot-files should be world writable "
    else
        echo "___ (8) 8.8 No user dot-files should be world writable "
    fi
    if test "$menu9" = 1 
    then
        echo "_X_ (9) 8.9 Remove user .netrc files "
    else
        echo "___ (9) 8.9 Remove user .netrc files "
    fi
    if test "$menu10" = 1 
    then
        echo "_X_ (10) 8.10 Set default umask for users "
    else
        echo "___ (10) 8.10 Set default umask for users "
    fi
    if test "$menu11" = 1 
    then
        echo "_X_ (11) 8.11 Disable core dumps "
    else
        echo "___ (11) 8.11 Disable core dumps "
    fi
        echo "    (0)  Back to Main Menu"
    echo " Selection => "
     
    if test "$automatic" = "1"
    then
        echo "automatic opted"
    else
        read console_in
    fi   


	if ((test "$console_in" = "1" || test "$menu1" = "1" ) && ( test "$flag1" != "1") )
    then
        for name in `cut -d: -f1 /etc/passwd`; do 
            uid=$(id -u $name|grep -v +)
            if [ $uid -lt 500 -a $name != 'root' -a $name != 'cadmin' ]; then 
                /usr/sbin/usermod -L -s /dev/null $name 
            fi 
        done 
        echo "Section 8.1 completed."
        menu1=1
	    flag1=1
    fi

	if ((test "$console_in" = "2" || test "$menu2" = "1" ) && ( test "$flag2" != "1") )
    then
        awk -F: '($2 == "") { print "no blank password allowed, check /etc/shadow" }' /etc/shadow >>/tmp/lhcharden-`hostname`
        echo "should return no lines of output,otherwise, please manually fix it"
        echo "leave blank password can not pass the certification, Press ENTER to continue"
	    if test "$automatic" != 1
	    then
            read console_in_temp
	    fi
        echo "Section 8.2 completed."
        menu2=1
	    flag2=1
    fi
   
	if ((test "$console_in" = "3" || test "$menu3" = "1" ) && ( test "$flag3" != "1") )
    then
        cd /etc 
        awk '($1 ~ /^PASS_MAX_DAYS/) { $2="60" } 
             ($1 ~ /^PASS_MIN_DAYS/) { $2="1" } 
             ($1 ~ /^PASS_WARN_AGE/) { $2="14" } 
             ($1 ~ /^PASS_MIN_LEN/) { $2="15" } 
             { print } ' login.defs > login.defs.new 
        /bin/mv login.defs.new login.defs 
        /bin/chown root:root login.defs 
        /bin/chmod 640 login.defs 
        for name in `cut -d: -f1 /etc/passwd`; do 
            uid=`id -u $name` 
            if [ $uid -ge 500 -a $uid != 65534 ]; then 
                /usr/bin/chage -m 7 -M 90 -W 28 $name 
            fi 
        done 
        echo "Section 8.3 completed."
        menu3=1
	    flag3=1
    fi

    if ((test "$console_in" = "4" || test "$menu4" = "1" ) && ( test "$flag4" != "1") )
    then
        if test "`grep ^+: /etc/passwd /etc/shadow /etc/group|wc -l`" != "0"
	    then
	        echo "no legacy account with + allowed"|tee -a /tmp/lhcharden-`hostname`
	    fi 
        echo "should return no lines of output"
        echo "Press ENTER to continue"
	    if test "$automatic" != 1
        then
            read console_in_temp
	    fi
        echo "Section 8.4 completed."
        menu4=1
	    flag4=1
    fi
       
	if ((test "$console_in" = "5" || test "$menu5" = "1" ) && ( test "$flag5" != "1") )
    then
	    awk -F: '($3 ==0 && $1 != "root") { print $1,"need to be removed since it has a uid equal to root uid" }' /etc/passwd |tee -a /tmp/lhcharden-`hostname`
        echo "should return only the word 'root'" 
        echo "Press ENTER to continue"
	    if test "$automatic" != 1
        then
            read console_in_temp
        fi
        echo "Section 8.5 completed."
        menu5=1
        flag5=1
    fi
    
	if ((test "$console_in" = "6" || test "$menu6" = "1" ) && ( test "$flag6" != "1") )
    then
        echo "Please refer to Benchmark document."
        echo "Press ENTER to continue"
	    echo "please check to make sure no "." in root's \$PATH">>/tmp/lhcharden-`hostname`
	    if test "$automatic" != 1
        then
            read console_in_temp
	    fi
        echo "Section 8.6 completed."
        menu6=1
        flag6=1
    fi
    
    if ((test "$console_in" = "7" || test "$menu7" = "1" ) && ( test "$flag7" != "1") )
    then
        for dir in `awk -F: '($3 >= 500) { print $6 }' /etc/passwd` 
        do 
            dir=$(echo "$dir" | sed 's/\/\{1,\}/\//g')
            # we skip any references to "/", otherwise we will lock the system up (making / = 0750 is a no-no)
            if [ "$dir" != "/" ] && ! echo "$dir" | grep "^\/run" ; then
                /bin/chmod g-w $dir 
                /bin/chmod o-rwx $dir 
            fi
        done 
	    chmod 700 /root
        echo "Section 8.7 completed."
        menu7=1
        flag7=1
    fi
    
	if ((test "$console_in" = "8" || test "$menu8" = "1" ) && ( test "$flag8" != "1") )
    then
        for dir in `awk -F: '($3 >= 500) { print $6 }' /etc/passwd` 
        do 
            for file in $dir/.[A-Za-z0-9]*; do 
            if [ ! -h "$file" -a -f "$file" ]; then 
                /bin/chmod go-w "$file" 
            fi 
            done 
        done 
        echo "Section 8.8 completed."
        menu8=1
        flag8=1
    fi
    
	if ((test "$console_in" = "9" || test "$menu9" = "1" ) && ( test "$flag9" != "1") )
    then
        for dir in `cut -f6 -d: /etc/passwd` 
        do 
            /bin/rm -f $dir/.netrc  &> /dev/null
        done 
        echo "Section 8.9 completed."
        menu9=1
        flag9=1
   fi

	if ((test "$console_in" = "10" || test "$menu10" = "1" ) && ( test "$flag10" != "1") )
   then
      cd /etc 
      for file in profile csh.login csh.cshrc bashrc 
      do 
         if [ `egrep -c umask\.\*77 $file` -eq 0 ]; 
         then   
            echo "umask 077" >> $file 
         fi 
         /bin/chown root:root $file 
         /bin/chmod 444 $file 
        done 
        cd /root 
        for file in /root/.bash_profile /root/.bashrc /root/.cshrc /root/.tcshrc 
        do 
	    if [ -e $file ]; then
            echo "umask 077" >>$file 
            /bin/chown root:root $file 
	        /bin/chmod 400 $file
	    fi
    
        done 
        echo "Section 8.10 completed."
        menu10=1
        flag10=1
    fi

	if ((test "$console_in" = "11" || test "$menu11" = "1" ) && ( test "$flag11" != "1") )
    then
        cat <<ENDSCRIPT >>/etc/security/limits.conf
*	soft	core	0 
*	hard	core	0 
ENDSCRIPT
        echo "Section 8.11 completed."
        menu11=1
        flag11=1
    fi
  
    if test "$automatic" = "1" 
    then
        console_in=0
    fi

done
