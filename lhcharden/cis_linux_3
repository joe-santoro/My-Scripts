#!/bin/sh
PATH=$PATH:/bin:/usr/bin:/sbin:/usr/sbin
automatic=$1
options=$2
RH=`cat /etc/redhat-release | awk '{print $7}'|cut -d. -f1`

source $(pwd)/functions

menu1=0; menu2=0; menu3=0; menu4=0; menu5=0; menu6=0; menu7=0
menu8=0; menu9=0; menu10=0; menu11=0; menu12=0;menu13=0;menu14=0
menu15=0; menu16=0; menu17=0; menu18=0; menu19=0; menu20=0; menu21=0
flag1=0; flag2=0; flag3=0; flag4=0; flag5=0; flag6=0; flag7=0
flag8=0; flag9=0; flag10=0; flag11=0; flag12=0;flag13=0;flag14=0
flag15=0; flag16=0; flag17=0; flag18=0; flag19=0; flag20=0; flag21=0

if test "$automatic" = "1"
then
    if test "$options" = "1"
    then
        menu1=1; menu3=1; menu6=1; menu12=1
    elif test "$options" = "2"
    then
        menu1=1; menu3=1; menu6=1; menu7=1; menu9=1; menu10=1; menu12=1
    else
        echo "exited in parsing options in section 3 menus"
        exit
    fi
fi


until test "$console_in" = "0"
do
    #clear
    echo "        CIS LINUX Benchmark v2.0"
    echo "             Section 3  Menu"
    echo 
    if test "$menu1" = 1
    then
    echo "_X_ (1) 3.1 Set daemon umask "
    else
    echo "___ (1) 3.1 Set daemon umask "
    fi
    if test "$menu2" = 1
    then
    echo "_X_ (2) 3.2 Disable xinetd, if installed (recommended)"
    else
    echo "___ (2) 3.2 Disable xinetd, if installed (recommended)"
    fi
    if test "$menu3" = 1
    then
    echo "_X_ (3) 3.3 Disable email server, if possible "
    else
    echo "___ (3) 3.3 Disable email server, if possible "
    fi
    if test "$menu4" = 1
    then
    echo "_X_ (4) 3.4 Disable GUI Login if possible (NOT recommended)"
    else
    echo "___ (4) 3.4 Disable GUI Login if possible (NOT recommended)"
    fi
    if test "$menu5" = 1
    then
    echo "_X_ (5) 3.5 Disable X font server if possible (NOT recommended)"
    else
    echo "___ (5) 3.5 Disable X font server if possible (NOT recommended)"
    fi
    if test "$menu6" = 1
    then
    echo "_X_ (6) 3.6 Disable Standard Boot Services (recommended)"
    else
    echo "___ (6) 3.6 Disable Standard Boot Services (recommended)"
    fi
    if test "$menu7" = 1
    then
    echo "_X_ (7) 3.7 * Only enable SMB (Windows filesharing) processes if absolutely necessary "
    else
    echo "___ (7) 3.7 * Only enable SMB (Windows filesharing) processes if absolutely necessary "
    fi
    if test "$menu8" = 1
    then
    echo "_X_ (8) 3.8 * Only enable NFS server processes if absolutely necessary"
    else
    echo "___ (8) 3.8 * Only enable NFS server processes if absolutely necessary"
    fi
    if test "$menu9" = 1
    then
    echo "_X_ (9) 3.9 * Only enable NFS client processes if absolutely necessary (recommended)"
    else
    echo "___ (9) 3.9 * Only enable NFS client processes if absolutely necessary (recommended)"
    fi
    if test "$menu10" = 1
    then
    echo "_X_ (10) 3.10 * Only enable NIS client processes if absolutely necessary"
    else
    echo "___ (10) 3.10 * Only enable NIS client processes if absolutely necessary"
    fi
    if test "$menu11" = 1
    then
    echo "_X_ (11) 3.11 * Only enable NIS server processes if absolutely necessary "
    else
    echo "___ (11) 3.11 * Only enable NIS server processes if absolutely necessary "
    fi
    if test "$menu12" = 1
    then
    echo "_X_ (12) 3.12 * Only enable RPC portmap process if absolutely necessary (recommended) "
    else
    echo "___ (12) 3.12 * Only enable RPC portmap process if absolutely necessary (recommended) "
    fi
    if test "$menu13" = 1
    then
    echo "_X_ (13) 3.13 Only enable netfs script if absolutely necessary "
    else
    echo "___ (13) 3.13 Only enable netfs script if absolutely necessary "
    fi
    if test "$menu14" = 1
    then
    echo "_X_ (14) 3.14 Only enable printer daemon processes if absolutely necessary "
    else
    echo "___ (14) 3.14 Only enable printer daemon processes if absolutely necessary "
    fi
    if test "$menu15" = 1
    then
    echo "_X_ (15) 3.15 Only enable Web server processes if absolutely necessary "
   else
   echo "___ (15) 3.15 Only enable Web server processes if absolutely necessary "
   fi
   if test "$menu16" = 1
   then
   echo "_X_ (16) 3.16 Only enable SNMP processes if absolutely necessary "
   else
   echo "___ (16) 3.16 Only enable SNMP processes if absolutely necessary "
   fi
   if test "$menu17" = 1
   then
   echo "_X_ (17) 3.17 Only enable DNS server process if absolutely necessary "
   else
   echo "___ (17) 3.17 Only enable DNS server process if absolutely necessary "
   fi
   if test "$menu18" = 1
   then
   echo "_X_ (18) 3.18 Only enable SQL server processes if absolutely necessary"
   else
   echo "___ (18) 3.18 Only enable SQL server processes if absolutely necessary"
   fi
   if test "$menu19" = 1
   then
   echo "_X_ (19) 3.19 Only enable Webmin processes if absolutely necessary "
   else
   echo "___ (19) 3.19 Only enable Webmin processes if absolutely necessary "
   fi
   if test "$menu20" = 1
   then
   echo "_X_ (20) 3.20 Only enable Squid cache server if absolutely necessary "
   else
   echo "___ (20) 3.20 Only enable Squid cache server if absolutely necessary "
   fi
   if test "$menu21" = 1
   then
   echo "_X_ (21) 3.21 Only enable Kudzu hardware detection if absolutely necessary "
   else
   echo "___ (21) 3.21 Only enable Kudzu hardware detection if absolutely necessary "
   fi
   echo "    (0)  Back to Main Menu"
   echo " Selection => "
    if test "$automatic" = "1"
    then
        echo "automatic opted"
    else
        read console_in
    fi   

   
    if ((test "$console_in" = "1" || test "$menu1" = "1" ) && ( test "$flag1" != "1") )
    then
        cd /etc/rc.d/init.d 
        awk '($1=="umask"){if ($2 < "027"){gsub($2,"027")}};{print}' functions>functions.tmp
        if [ `grep -c umask functions` -eq 0 ]; then
            echo "umask 027" >> functions.tmp
        fi
        /bin/mv functions.tmp functions
        /bin/chmod 755 functions
        echo "Section 3.1 completed."
        menu1=1
        flag1=1
    fi

    if ((test "$console_in" = "2" || test "$menu2" = "1" ) && ( test "$flag2" != "1") )
    then
        if [ -e /etc/xinetd.d ]; then
        cd /etc/xinetd.d 
        if [ `awk '($1=="disable" &&$3=="no"){print}' * |wc -l` == 0 ] 
        then 
            /sbin/chkconfig --level 12345 xinetd off 
        fi 
    fi
    echo "Section 3.2 completed."
    menu2=1
    flag2=1
fi

    if ((test "$console_in" = "3" || test "$menu3" = "1" ) && ( test "$flag3" != "1") )
    then
#    if [ -f /etc/sysconfig/sendmail ]; then
        cd /etc/sysconfig 
        cat <<ENDSCRIPT > sendmail
DAEMON=no 
QUEUE=1h 
ENDSCRIPT
        /bin/chown root:root sendmail 
        /bin/chmod 644 sendmail 
#
        if [ -f "/etc/sendmail.cf" ] ; then
            sed -i 's/O HelpFile=/#&/' /etc/mail/sendmail.cf
            sed -i 's/O SmtpGreetingMessage=.*/O SmtpGreetingMessage=Mail Server Ready; $b/' /etc/mail/sendmail.cf
            chown root:bin /etc/mail/sendmail.cf
            chmod 0444 /etc/mail/sendmail.cf
        fi
# SEE RT 69853
#        if [ -f /etc/postfix/master.cf ]; then
#            sed -i 's/^[ \t]*smtp/#smtp/' /etc/postfix/master.cf
#            sed -i 's/^[ \t]*local/#local/' /etc/postfix/master.cf
#        fi
        if [ -f /etc/postfix/main.cf ] ; then
            sed -i 's/^[ \t]*inet_interfaces/#inet_interfaces/' /etc/postfix/main.cf
# SEE RT 69853
#            sed -i 's/^[ \t]*relayhost/#relayhost/' /etc/postfix/main.cf
            sed -i 's/^[ \t]*local_transport/#local_transport/' /etc/postfix/main.cf
            sed -i 's/^[ \t]*myorigin/#myorigin/' /etc/postfix/main.cf
# SEE RT 69853
#            cat <<ENDSCRIPT >> /etc/postfix/main.cf
#myorigin = nih.gov
#inet_interfaces = loopback-only
#local_transport = error:local delivery is disabled
#ENDSCRIPT
        fi
        echo "Section 3.3 completed."
          menu3=1
        flag3=1
    fi
    if ((test "$console_in" = "4" || test "$menu4" = "1" ) && ( test "$flag4" != "1") )
    then
        sed 's/id:5:initdefault:/id:3:initdefault:/' \
            < /etc/inittab > /etc/inittab.new 
        /bin/mv /etc/inittab.new /etc/inittab 
        /bin/chown root:root /etc/inittab 
        /bin/chmod 0600 /etc/inittab 
        echo "Section 3.4 completed."
        menu4=1
       flag4=1
    fi

    if ((test "$console_in" = "5" || test "$menu5" = "1" ) && ( test "$flag5" != "1") )
    then
      /sbin/chkconfig xfs off 
      echo "Section 3.5 completed."
      menu5=1
    flag5=1
   fi

    if ((test "$console_in" = "6" || test "$menu6" = "1" ) && ( test "$flag6" != "1") )
    then
        cd /etc/init.d
        for file in `chkconfig --list | grep :on | awk '{print $1}' | grep -vP 'azeti:BESClient|besclient|auditd|crond|irqbalance|messagebus|network|networker|haldaemon|ntpd|sshd|syslog|sysstat|yum-updatesd|nscd|rsyslog|microcode_ctl'`
        do
            #koenjc modification to allow sysadmin services to run [20130325]
            # RT 43612
            if ( test "$target" = "2" && (echo $file | grep -wP 'NetworkManager') )
            then
                next
            else
#              /sbin/chkconfig --level 12345 $file off
                service $file off 12345
            fi
        done
        for user in rpc rpcuser lp apache http httpd named dns \
                  mysql postgres squid 
        do 
            /usr/bin/getent passwd $user > /dev/null 2>&1 && /usr/sbin/usermod -L $user 
        done 
        echo "Section 3.6 completed."
        menu6=1
        flag6=1
    fi
    if ((test "$console_in" = "7" || test "$menu7" = "1" ) && ( test "$flag7" != "1") )
    then
       # /sbin/chkconfig smb on 2> /dev/null 2>&1
        service smb on
        echo "Section 3.7 completed."
        menu7=1
        flag7=1
    fi

    if ((test "$console_in" = "8" || test "$menu8" = "1" ) && ( test "$flag8" != "1") )
    then
        #/sbin/chkconfig --level 345 nfs on 
        service nfs on 345
        echo "Section 3.8 completed."
        menu8=1
        flag8=1
    fi

    if ((test "$console_in" = "9" || test "$menu9" = "1" ) && ( test "$flag9" != "1") )
    then
        #/sbin/chkconfig --level 345 nfslock on 
        #/sbin/chkconfig --level 345 autofs on 
        if [ ${RH} -le 6 ]; then
            service nfslock on 345
        else
            service nfs-lock on
        fi
        service autofs on 345
        echo "Section 3.9 completed."
        menu9=1
        flag9=1
    fi

    if ((test "$console_in" = "10" || test "$menu10" = "1" ) && ( test "$flag10" != "1") )
    then
        #/sbin/chkconfig ypbind on 
        service ypbind on
        echo "Section 3.10 completed."
        menu10=1
        flag10=1
    fi

    if ((test "$console_in" = "11" || test "$menu11" = "1" ) && ( test "$flag11" != "1") )
    then
        #/sbin/chkconfig ypserv on 
        #/sbin/chkconfig yppasswdd on 
        service ypserv on
        service yppasswdd on
        echo "Section 3.11 completed."
        menu11=1
        flag11=1
    fi

    if ((test "$console_in" = "12" || test "$menu12" = "1" ) && ( test "$flag12" != "1") )
    then
        if [ ${RH} -le 5 ]; then
            #/sbin/chkconfig --level 345 portmap on 
            service portmap on 345
        elif [ ${RH} -eq 6 ]; then
            #/sbin/chkconfig --level 345 rpcbind on 
            service rpcbind on 345
        elif [ ${RH} -eq 7 ]; then
            service rpcbind on
        fi    
        echo "Section 3.12 completed."
        menu12=1
        flag12=1
    fi

    if ((test "$console_in" = "13" || test "$menu13" = "1" ) && ( test "$flag13" != "1") )
    then
        if [ ${RH} -le 6 ]; then
            #/sbin/chkconfig --level 345 netfs on 
            service netfs on 345
        else 
            #/bin/systemctl enable nfs-lock.service
            service nfs-lock on
        fi
        echo "Section 3.13 completed."
        menu13=1
        flag13=1
    fi
    
    if ((test "$console_in" = "14" || test "$menu14" = "1" ) && ( test "$flag14" != "1") )
    then
        if [  -e /etc/init.d/cups ]
        then 
            #/sbin/chkconfig cups on 
            service cups on
            sed 's/^\#User lp/User lp/' /etc/cups/cupsd.conf \
                    >/etc/cups/cupsd.conf.new 
            sed 's/^\#Group sys/Group sys/' \
                    /etc/cups/cupsd.conf.new >/etc/cups/cupsd.conf 
            rm -f /etc/cups/cupsd.conf.new 
            /bin/chown lp:sys /etc/cups/cupsd.conf 
            /bin/chmod 0600 /etc/cups/cupsd.conf 
        fi 
        #/sbin/chkconfig hpoj on 
        #/sbin/chkconfig lpd on 
        echo "Section 3.14 completed."
        menu14=1
        flag14=1
    fi

    if ((test "$console_in" = "15" || test "$menu15" = "1" ) && ( test "$flag15" != "1") )
    then
        cd /etc/init.d
        for file in apache httpd tux
        do 
            /sbin/chkconfig $file on 
        done 
        echo "Section 3.15 completed."
        menu15=1
        flag15=1
    fi

    if ((test "$console_in" = "16" || test "$menu16" = "1" ) && ( test "$flag16" != "1") )
    then
        /sbin/chkconfig snmpd on 
        echo "Section 3.16 completed."
        menu16=1
        flag16=1
    fi

    if ((test "$console_in" = "17" || test "$menu17" = "1" ) && ( test "$flag17" != "1") )
    then
        #/sbin/chkconfig named on 
        service named on
        echo "Section 3.17 completed."
        menu17=1
        flag17=1
    fi

    if ((test "$console_in" = "18" || test "$menu18" = "1" ) && ( test "$flag18" != "1") )
    then
        #/sbin/chkconfig postgresql on 
        #/sbin/chkconfig mysqld on 
        service postgresql on
        service mysqld on
        echo "Section 3.18 completed."
        menu18=1
        flag18=1
    fi

    if ((test "$console_in" = "19" || test "$menu19" = "1" ) && ( test "$flag19" != "1") )
    then
#        /sbin/chkconfig webmin on 
	service webmin on
        echo "Section 3.19 completed."
        menu19=1
        flag19=1
    fi

    if ((test "$console_in" = "20" || test "$menu20" = "1" ) && ( test "$flag20" != "1") )
    then
#        /sbin/chkconfig squid on 
	service squid on
        echo "Section 3.20 completed."
        menu20=1
        flag20=1
    fi

    if ((test "$console_in" = "21" || test "$menu21" = "1" ) && ( test "$flag21" != "1") )
    then
#        /sbin/chkconfig --level 345 kudzu on 
	service kudzu on 345
        echo "Section 3.21 completed."
        menu21=1
        flag21=1
    fi

    if test "$automatic" = "1"
    then
        console_in=0
    fi
done
