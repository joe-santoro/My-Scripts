#!/bin/sh
RH=`cat /etc/redhat-release | awk '{print $7}'|cut -d. -f1`
PATH=$PATH:/bin:/usr/bin:/sbin:/usr/sbin
automatic=$1
options=$2

menu1=0; menu2=0; menu3=0; menu4=0; menu5=0; menu6=0; menu7=0
flag1=0; flag2=0; flag3=0; flag4=0; flag5=0; flag6=0; flag7=0
if test "$automatic" = "1"
then
    if test "$options" = "1"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1
    elif test "$options" = "2"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1
    else
        echo "exited in parsing options in section 6 menus"
        exit
    fi
fi


until test "$console_in" = "0"
do
    #clear
    echo "        CIS LINUX Benchmark v2.0"
    echo "             Section 6  Menu"
    echo 
    if test "$menu1" = 1 
    then
        echo "_X_ (1) 6.1 Add 'nodev' option to appropriate partitions in /etc/fstab "
    else
        echo "___ (1) 6.1 Add 'nodev' option to appropriate partitions in /etc/fstab "
    fi
    if test "$menu2" = 1 
    then
        echo "_X_ (2) 6.2 Add 'nosuid' and 'nodev' option for removable media in /etc/fstab "
    else
        echo "___ (2) 6.2 Add 'nosuid' and 'nodev' option for removable media in /etc/fstab "
    fi
    if test "$menu3" = 1 
    then
        echo "_X_ (3) 6.3 Disable user-mounted removable filesystems "
    else
        echo "___ (3) 6.3 Disable user-mounted removable filesystems "
    fi
    if test "$menu4" = 1 
    then
        echo "_X_ (4) 6.4 Verify passwd, shadow, and group file permissions "
    else
        echo "___ (4) 6.4 Verify passwd, shadow, and group file permissions "
    fi
    if test "$menu5" = 1 
    then
        echo "_X_ (5) 6.5 World-writable directories should have their sticky bit set "
    else
        echo "___ (5) 6.5 World-writable directories should have their sticky bit set "
    fi
    if test "$menu6" = 1 
    then
        echo "_X_ (6) 6.6 Find unauthorized world-writable files "
    else
        echo "___ (6) 6.6 Find unauthorized world-writable files "
    fi
    if test "$menu7" = 1 
    then
        echo "_X_ (7) 6.7 Find unauthorized SUID/SGID system executables "
    else
        echo "___ (7) 6.7 Find unauthorized SUID/SGID system executables "
    fi
    echo "    (0)  Back to Main Menu"
    echo " Selection => "

    if test "$automatic" = "1"
    then
        echo "automatic opted"
    else
        read console_in
    fi   

    if ((test "$console_in" = "1" || test "$menu1" = "1" ) && ( test "$flag1" != "1") )
    then
        awk '($3 ~ /^ext[234]$/ && $2 != "/") \
            { $4 = $4 ",nodev" }; \
            { print }' /etc/fstab >/etc/fstab.new 
        /bin/mv /etc/fstab.new /etc/fstab 
        /bin/chown root:root /etc/fstab 
        /bin/chmod 0644 /etc/fstab 
        echo "Section 6.1 completed."
        menu1=1
        flag1=1
    fi

    if ((test "$console_in" = "2" || test "$menu2" = "1" ) && ( test "$flag2" != "1") )
    then
        RH=`cat /etc/redhat-release | awk '{print $7}'|cut -d. -f1`
        if [ ${RH} -eq 4 ]; then
            
            awk '($2 ~ /^\/m.*\/(floppy|cdrom|zip)$/) \
                { $4 = $4 ",nosuid,nodev" }; \
                { print }' /etc/fstab >/etc/fstab.new 
            /bin/mv /etc/fstab.new /etc/fstab 
            /bin/chown root:root /etc/fstab 
            /bin/chmod 0644 /etc/fstab 
            # update the ploicy. otherwise the add-on option will be reset
            file=/usr/share/hal/fdi/90defaultpolicy/storage-policy.fdi
            awk '/option.exec/ { print $0 ; \
            print "      <merge key=\"storage.policy.default.mount_option.nosuid\" type=\"bool\">true</merge>"; \
            print "      <merge key=\"storage.policy.default.mount_option.nodev\" type=\"bool\">true</merge>"; next }; \
                    { print }' $file > $file.cisNEW
            /bin/cp $file.cisNEW $file 
            /bin/chown root:root $file 
            /bin/chmod 0644  $file 
        elif [ ${RH} -eq 5 ]; then
            if [ "`strings /usr/libexec/hal-storage-mount|grep noexec,nosuid,nodev`" == "noexec,nosuid,nodev" ]; then
                echo "RHELV5 default nosuid,noexe"
            else
                echo "ERROR, please check default mounting options"
            fi
        elif [ ${RH} -eq 6 ]; then
            if [ "`strings /usr/libexec/hal-storage-mount|grep nosuid,nodev,uhelper=hal`" == "nosuid,nodev,uhelper=hal" ]; then
                echo "RHELV6 default nosuid,nodev,uhelper=hal"
            else
                echo "ERROR, please check default mounting options"
            fi
        else
            echo "Can not decide release info"
        fi
        echo "Section 6.2 completed."
        menu2=1
        flag2=1
    fi
    
    if ((test "$console_in" = "3" || test "$menu3" = "1") && ( test "$flag3" != "1") )
    then
        cd /etc/security 
        DEF_FILE="console.perms.d/50-default.perms"
        if [ ${RH} -lt 6 ]; then
            if [ ${RH} -eq 4 ]; then
                awk '($1 == "<console>") && ($3 !~ \
                        /sound|fb|kbd|joystick|v4l|mainboard|gpm|scanner/) \
                        { $1 = "#<console>" }; 
                            { print }' ${DEF_FILE} > ${DEF_FILE}.cisNEW
            elif [ ${RH} -eq 5 ]; then
                awk '($1 == "<console>") && ($3 !~ \
                    /sound|fb|kbd|joystick|v4l|mainboard|gpm|scanner/) \
                        { $1 = "#<console>" }; \
                        { print }' ${DEF_FILE} > ${DEF_FILE}.cisNEW
            fi
            /bin/mv ${DEF_FILE}.cisNEW ${DEF_FILE}
            /bin/chown root:root console.perms 
            /bin/chmod 0600 console.perms 
            /bin/chmod 0600 console.perms.d/* 
        elif [ ${RH} -eq 6 ]; then
#            /bin/sed -i '/org.freedesktop.udisks.filesystem-mount/,/\/action/ { s/<allow_active>yes/<allow_active>auth_admin/}' /usr/share/polkit-1/actions/org.freedesktop.udisks.policy
            /bin/chown root:root console.perms 
            /bin/chmod 0600 console.perms 
            /bin/chmod 0600 console.perms.d/* 
        elif [ ${RH} -eq 7 ]; then
#            /bin/sed -i '/org.freedesktop.udisks2.filesystem-mount/,/\/action/ { s/<allow_active>yes/<allow_active>auth_admin/}' /usr/share/polkit-1/actions/org.freedesktop.udisks2.policy
            /bin/chown root:root console.perms 
            /bin/chmod 0600 console.perms    &> /dev/null
            /bin/chmod 0600 console.perms.d/*  &> /dev/null 
        fi
        echo "Section 6.3 completed."
        menu3=1
        flag3=1
    fi

    if ((test "$console_in" = "4" || test "$menu4" = "1" ) && ( test "$flag4" != "1") )
    then
        cd /etc 
        /bin/chown root:root passwd shadow group 
        /bin/chmod 644 passwd group 
        /bin/chmod 000 shadow 
        echo "Section 6.4 completed."
        menu4=1
        flag4=1
    fi

    if ((test "$console_in" = "5" || test "$menu5" = "1" ) && ( test "$flag5" != "1") )
    then
        echo > /tmp/sec6_5.log
        for part in `awk '($3 == "xfs" || $3 == "ext2" || $3 == "ext3" || $3 == "ext4") \
            { print $2 }' /etc/fstab` 
        do 
            find $part -xdev -type d \
                  \( -perm -0002 -a ! -perm -1000 \) -print >> /tmp/sec6_5.log
        done 
        
        cat /tmp/sec6_5.log
        echo; echo; echo "The result was also logged into /tmp/sec6_5.log."; echo
        echo "Section 6.5 completed."
        menu5=1
        flag5=1
    fi
    

    if ((test "$console_in" = "6" || test "$menu6" = "1" ) && ( test "$flag6" != "1") )
    then
        echo > /tmp/sec6_6.log
        for part in `awk '($3 == "xfs" || $3 == "ext2" || $3 == "ext3" || $3 == "ext4") { print $2 }' /etc/fstab` 
        do 
            find $part -xdev -perm -0002 -type f -print >> /tmp/sec6_6.log
        done 
        cat /tmp/sec6_6.log
        echo; echo; echo "The result was also logged into /tmp/sec6_6.log."; echo
        echo "Section 6.6 completed."
        menu6=1
        flag6=1
    fi

    if ((test "$console_in" = "7" || test "$menu7" = "1" ) && ( test "$flag7" != "1") )
    then
        echo > /tmp/sec6_7.log
        for part in `awk '($3 == "xfs" || $3 == "ext2" || $3 == "ext3" || $3 == "ext4") { print $2 }' /etc/fstab`
        do 
            find $part -xdev \( -perm -04000 -o -perm -02000 \) \
                        -type f -print >> /tmp/sec6_7.log
        done 
        cat /tmp/sec6_7.log
        echo; echo; echo "The result was also logged into /tmp/sec6_7.log."; echo
        echo "Section 6.7 completed."
        menu7=1
        flag7=1
    fi
    if test "$automatic" = "1" 
    then
        console_in=0
    fi

done
