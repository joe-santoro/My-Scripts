#!/bin/sh --debug
PATH=$PATH:/bin:/usr/bin:/sbin:/usr/sbin
automatic=$1
options=$2
RH=`cat /etc/redhat-release | awk '{print $7}'|cut -d. -f1`
menu1=0;menu2=0;menu3=0;menu4=0;menu5=0;menu6=0;menu7=0;menu8=0;menu9=0
flag1=0;flag2=0;flag3=0;flag4=0;flag5=0;flag6=0;flag7=0;flag8=0;flag9=0
if test "$automatic" = "1"
then
	if test "$options" = "1"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1; menu9=1
    elif test "$options" = "2"
    then
        menu1=1; menu2=1; menu3=1; menu4=1; menu5=1; menu6=1; menu7=1; menu9=1
    else
        echo "exited in parsing options in section 9 menus"
        exit
    fi
fi

until test "$console_in" = "0"
do
    #clear
    echo "        CIS LINUX Benchmark v2.0"
    echo "             Section 9  Menu"
    echo 
    if test "$menu1" = 1 
    then
        echo "_X_ (1) 9.1 Enforce screensaver"
    else
        echo "___ (1) 9.1 Enforce screensaver"
    fi
    if test "$menu2" = 1 
    then
        echo "_X_ (2) 9.2 Enable IPV6"
    else
        echo "___ (2) 9.2 Enable IPV6"
    fi
    if test "$menu3" = 1 
    then
    echo "_X_ (3) 9.3 Enforce UserID password complexity(lower case/upper case/digit/other character)"
    else
    echo "___ (3) 9.3 Enforce UserID password complexity(lower case/upper case/digit/other character)"
    fi
    if test "$menu4" = 1 
    then
    echo "_X_ (4) 9.4 enforce mesg n to all users"
    else
    echo "___ (4) 9.4 enforce mesg n to all users"
    fi
    if test "$menu5" = 1 
    then
        echo "_X_ (5) 9.5 config system auditing (auditd will be disabled by default)" 
    else
        echo "___ (5) 9.5 config system auditing (auditd will be disabled by default)"
    fi
    if test "$menu6" = 1 
    then
    echo "_X_ (6) 9.6 hardening /etc/aliases"
    else
    echo "___ (6) 9.6 hardening /etc/aliases"
    fi
    if test "$menu7" = 1 
    then
    echo "_X_ (7) 9.7 setup lhc ntp configuration"
    else
    echo "___ (7) 9.7 setup lhc ntp configuration"
    fi
    if test "$menu8" = 1 
    then
    echo "_X_ (8) 9.8 Install sysstat and auditd if not installed (auditd will be disabled by default)"
    else
    echo "___ (8) 9.8 Install sysstat and auditd if not installed (auditd will be disabled by default)"
    fi
    if test "$menu9" = 1 
    then
    echo "_X_ (9) 9.9 config hosts.deny for tcpwrapper "
    else
    echo "___ (9) 9.9 config hosts.deny for tcpwrapper "
    fi
    if test "$menu10" = 1 
    then
    echo "_X_ (10) 8.10 Set default umask for users "
    else
    echo "___ (10) 8.10 Set default umask for users "
    fi
    if test "$menu11" = 1 
    then
    echo "_X_ (11) 8.11 Disable core dumps "
    else
    echo "___ (11) 8.11 Disable core dumps "
    fi
    echo "    (0)  Back to Main Menu"
    echo " Selection => "
    if  test "$automatic" = "1"
    then
        echo "automatic opted"
    else
        read console_in
    fi   

    if ((test "$console_in" = "1" || test "$menu1" = "1" ) && ( test "$flag1" != "1") )
    then
	    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --type bool --set /apps/gnome-screensaver/idle_activation_enabled true
	    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --type bool --set /apps/gnome-screensaver/lock_enabled true
	    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --type int --set /apps/gnome-screensaver/idle_delay 10
        echo "Section 9.1 completed."
        menu1=1
	    flag1=1
    fi

    if ((test "$console_in" = "2" || test "$menu2" = "1" ) && ( test "$flag2" != "1") )
    then
	    /bin/sed -i '/^NETWORKING_IPV6=$/d' /etc/sysconfig/network && echo "NETWORKING_IPV6=yes">>/etc/sysconfig/network
	    /bin/sed -i '/^IPV6INIT=$/d' /etc/sysconfig/network && echo "IPV6INIT=yes">>/etc/sysconfig/network
        echo "Section 9.2 completed."
        menu2=1
	    flag2=1
    fi
   
	if ((test "$console_in" = "3" || test "$menu3" = "1" ) && ( test "$flag3" != "1") )
    then
	    if grep -e 'minlen=15 lcredit=1 ucredit=1 dcredit=1 ocredit=1' /etc/pam.d/system-auth;then
	        echo "password complexity meet requirements"
	    else
            awk '/pam_cracklib.so/ {print "password    requisite     pam_cracklib.so try_first_pass retry=3 minlen=15 lcredit=-1 ucredit=-1 dcredit=-1 ocredit=-1";next}{print;}' /etc/pam.d/system-auth>/etc/pam.d/system-auth-CISnew
            mv /etc/pam.d/system-auth-CISnew /etc/pam.d/system-auth
	    fi
        sed -i 's/^auth.*pam_deny.so$/auth required pam_tally2.so onerr=fail no_magic_root\n&/' /etc/pam.d/system-auth
        sed -i '/pam_unix.so sha512 shadow/s/nullok //' /etc/pam.d/system-auth
        sed -i '/pam_unix.so md5 shadow/s/nullok //' /etc/pam.d/system-auth
        chmod 644  /etc/pam.d/system-auth
        chown root:root /etc/pam.d/system-auth
        #password history
        touch /etc/security/opasswd
        chown root:root /etc/security/opasswd
        chmod 600 /etc/security/opasswd
        #sed -i '/^password[ \t]*sufficient[ \t]*pam_unix.so/s/$/ remember=24/' /etc/pam.d/system-auth
        #

        echo "Section 9.3 completed."
        menu3=1
	    flag3=1
    fi

	if ((test "$console_in" = "4" || test "$menu4" = "1" ) && ( test "$flag4" != "1") )
    then
	    for x in /etc/profile /etc/csh.login ; do
            /bin/sed -i '/^mesg n$/d' $x && echo "mesg n" >>$x
    	done
        echo "Section 8.4 completed."
        menu4=1
	    flag4=1
    fi
   
	if ((test "$console_in" = "5" || test "$menu5" = "1" ) && ( test "$flag5" != "1") )
   then
	auditPATH='unknown'
if [ -e /etc/audit.rules ]; then
auditPATH='/etc'
else
if [ -e /etc/audit/audit.rules ]; then
auditPATH='/etc/audit'
fi
fi
if [ "$auditPATH" == "unknown" ]; then
echo "Auditing service not installed"
fi
/bin/cp -pf $auditPATH/audit.rules $auditPATH/audit.rules.cisNEW

/sbin/chkconfig --levels 0123456 auditd off
echo "The auditd service is disabled by default. It may be turned on if needed"


# Increase the size of the log
sed "s/-b [0-9]*/-b 1024/" $auditPATH/audit.rules.cisNEW>$auditPATH/audit.rules
cat <<END_SCRIPT>>$auditPATH/audit.rules
-a exit,always -S open -F success!=0
-a exit,always -S unlink -S rmdir
-w /var/log/audit/
-w /etc/auditd.conf
-w /etc/audit.rules
-a exit,always -S stime -S acct -S reboot -S swapon -S settimeofday
-a exit,always -S setrlimit -S setdomainname -S sched_setparam -S
sched_setscheduler
-a exit,always -S chmod -S fchmod -S chown -S chown32 -S fchown
-a exit,always -S fchown32 -S lchown -Slchown32
-e 1
END_SCRIPT

chown root:root $auditPATH/audit.rules
chmod 0600 $auditPATH/audit.rules
/bin/cp -pf $auditPATH/auditd.conf $auditPATH/auditd.conf.cisNEW
sed -e "s/num_logs = 4/num_logs = 5/" \
-e "s/max_log_file = 5/max_log_file = 100/" \
-e "s/space_left = 75/space_left = 125/" \
-e "s/admin_space_left = 50/admin_space_left = 75/" \
-e "s/space_left_action = SYSLOG/space_left_action = email/" \
$auditPATH/auditd.conf.cisNEW > $auditPATH/auditd.conf
	chown root:root $auditPATH/auditd.conf
	chmod 0600 $auditPATH/auditd.conf

      echo "Section 9.5 completed."
      menu5=1
	flag5=1
   fi

	if ((test "$console_in" = "6" || test "$menu6" = "1" ) && ( test "$flag6" != "1") )
   then
	sed 's/^decode:/#decode:/' /etc/aliases > /etc/aliases.cisNEW
	mv /etc/aliases.cisNEW /etc/aliases
        /usr/bin/newaliases>>/dev/null
	chmod 0644 /etc/aliases
        chown root:bin /etc/aliases
      echo "Section 9.6 completed."
      menu6=1
	flag6=1
   fi

	if ((test "$console_in" = "7" || test "$menu7" = "1" ) && ( test "$flag7" != "1") )
   then
	cd /etc 
	cp ntp.conf ntp.confPreCIS
	echo "server lhcntp.nlm.nih.gov">/etc/ntp.conf
	echo "driftfile /var/lib/ntp/drift">>/etc/ntp.conf
	echo "keys /etc/ntp/keys">>/etc/ntp.conf
	echo "trustedkey 15715 65533 65534" >> /etc/ntp.conf
	echo "disable monitor" >> /etc/ntp.conf
	echo "restrict default kod nomodify notrap nopeer noquery" >> /etc/ntp.conf
	echo "restrict -6 default kod nomodify notrap nopeer noquery" >> /etc/ntp.conf
	touch /etc/ntp/keys
	echo "15715 M lhctimekey">/etc/ntp/keys
	echo "65534 M keyofreq">>/etc/ntp/keys
	echo "65533 M keyofcontrol">>/etc/ntp/keys
      echo "Section 9.7 completed."
      menu7=1
	flag7=1
   fi

	if ((test "$console_in" = "8" || test "$menu8" = "1" ) && ( test "$flag8" != "1") )
   then
	if [ $RH -eq 4 ]; then	
	up2date -i sysstat audit
	elif [ $RH -eq 5 ]; then
	yum install sysstat
    /sbin/chkconfig --levels 0123456 auditd off
    echo "The auditd service is disabled by default. It may be turned on if needed"
	elif [ $RH -eq 6 ]; then
	yum install sysstat audit
    /sbin/chkconfig --levels 0123456 auditd off
    echo "The auditd service is disabled by default. It may be turned on if needed"
	fi
      echo "Section 8.8 completed."
      menu8=1
	flag8=1
   fi

	if ((test "$console_in" = "9" || test "$menu9" = "1" ) && ( test "$flag9" != "1") )
   then
	echo "ALL:ALL">/etc/hosts.deny
	/bin/sed -i '/^sshd:/d'  /etc/hosts.allow && echo "sshd:127.,130.14.49.,130.14.114.,130.14.115." >> /etc/hosts.allow
	/bin/sed -i '/^snmpd:/d' /etc/hosts.allow && echo "snmpd:130.14.49.52,130.14.49.223" >> /etc/hosts.allow 
#	/bin/sed -i '/^ALL:/d'   /etc/hosts.allow && echo "ALL:127.,130.14.49." >> /etc/hosts.allow
	/bin/sed -i '/^ALL:/d'   /etc/hosts.allow && echo "ALL:127.,130.14.49.70,130.14.49.71,130.14.49.87,130.14.49.43,130.14.49.44,130.14.49.76" >> /etc/hosts.allow
# we no longer need the rpc* setting in hosts.allow since we now have an ALL entry which covers 127.* 
#if [ $RH -eq 6 ]; then
#	/bin/sed -i '/^rpcbind , rpc.mountd , rpc.statd:/d' /etc/hosts.allow && echo "rpcbind , rpc.mountd , rpc.statd: 127.0.0.1">>/etc/hosts.allow	
#fi
	echo "please manually configure /etc/hosts.allow"|tee -a /tmp/lhcharden-`hostname`
      echo "Section 9.9 completed."
      menu9=1
	flag9=1
   fi

	if ((test "$console_in" = "10" || test "$menu10" = "1" ) && ( test "$flag10" != "1") )
   then
      echo "Section 8.10 completed."
      menu10=1
	flag10=1
   fi

	if ((test "$console_in" = "11" || test "$menu11" = "1" ) && ( test "$flag11" != "1") )
   then
      echo "Section 8.11 completed."
      menu11=1
	flag11=1
   fi
if test "$automatic" = "1" 
then
console_in=0
fi

done
