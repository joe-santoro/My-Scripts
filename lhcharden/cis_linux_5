#!/bin/sh
PATH=$PATH:/bin:/usr/bin:/sbin:/usr/sbin
automatic=$1
options=$2

menu1=0; menu2=0; menu3=0; menu4=0; menu5=0; menu6=0; menu7=0
flag1=0; flag2=0; flag3=0; flag4=0; flag5=0; flag6=0; flag7=0
if test "$automatic" = "1"
then
    if test "$options" = "1"
    then
        menu1=1; menu2=1; menu3=1; menu4=0; menu5=0; menu6=0; menu7=0
    elif test "$options" = "2"
    then
        menu1=1; menu2=1; menu3=1; menu4=0; menu5=0; menu6=0; menu7=0
    else
        echo "exited in parsing options in section 5 menus"
        exit
    fi
fi


until test "$console_in" = "0"
do
    #clear
    echo "        CIS LINUX Benchmark v2.0"
    echo "             Section 5  Menu"
    echo 
    if test "$menu1" = 1 
    then
        echo "_X_ (1) 5.1 Capture messages sent to syslog AUTHPRIV facility "
    else
        echo "___ (1) 5.1 Capture messages sent to syslog AUTHPRIV facility "
    fi
    if test "$menu2" = 1 
    then
        echo "_X_ (2) 5.2 Capture detailed FTP daemon logs "
    else
        echo "___ (2) 5.2 Capture detailed FTP daemon logs "
    fi
    if test "$menu3" = 1 
    then
        echo "_X_ (3) 5.3 Confirm permissions on system log files and rc.sysinit files"
    else
        echo "___ (3) 5.3 Confirm permissions on system log files and rc.sysinit files"
    fi
    echo "    (0)  Back to Main Menu"
    echo " Selection => "
     
    if test "$automatic" = "1"
    then
        echo "automatic opted"
    else
        read console_in
    fi   
    
    if ((test "$console_in" = "1" || test "$menu1" = "1" ) && ( test "$flag1" != "1") )
    then
        if [ -f /etc/syslog.conf ] 
        then
            if [ `grep -c 'authpriv\.' /etc/syslog.conf` -eq 0 ] 
            then 
                echo -e "authpriv.*\t\t\t\t/var/log/secure" >>/etc/syslog.conf 
            fi 
            if [ `grep -c '^\*\.[debug|\*].*\@lhcsyslog*' /etc/syslog.conf` -eq 0 ] 
            then 
                echo -e "*.*     @lhcsyslog.nlm.nih.gov" >>/etc/syslog.conf 
        
            fi 
        fi
        if [ -f /etc/rsyslog.conf ] 
        then

            /bin/sed -i '/# ### begin forwarding rule ###/,/# ### end of the forwarding rule ###/d' /etc/rsyslog.conf

            cat <<END_SCRIPT >> /etc/rsyslog.conf
# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
\$WorkDirectory /var/lib/rsyslog # where to place spool files
\$ActionQueueFileName fwdRule1 # unique name prefix for spool files
\$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
\$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
\$ActionQueueType LinkedList   # run asynchronously
\$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
*.* @lhcsyslog.nlm.nih.gov
# ### end of the forwarding rule ###
END_SCRIPT

        fi

        touch /var/log/secure 
        /bin/chown root:root /var/log/secure 
        /bin/chmod 600 /var/log/secure 
        echo "Section 5.1 completed."
        menu1=1
        flag1=1
    fi

	if ((test "$console_in" = "2" || test "$menu2" = "1" ) && ( test "$flag2" != "1") )
    then
        if [ -f /etc/ftpaccess ] ; then 
            cd /etc/xinetd.d 
            awk '/server_args/ \
                  { print " server_args = -l -a -d" ; next }; 
                  { print }' wu-ftpd >wu-ftpd.new 
            /bin/mv wu-ftpd.new wu-ftpd 
            /bin/chown root:root wu-ftpd 
            /bin/chmod 644 wu-ftpd 
        fi 
        if [ -f /etc/vsftpd.conf ] ; then 
            file="/etc/vsftpd.conf" 
        else 
            file="/etc/vsftpd/vsftpd.conf" 
        fi 
      if [ -f $file ] ; then 
         awk '/^#?xferlog_std_format/ \
                  { print "xferlog_std_format=NO"; next }; 
                  /^#?log_ftp_protocol/ \
                  { print "log_ftp_protocol=YES"; next }; 
                  { print }' $file >${file}.new 
         if [ `egrep -c log_ftp_protocol $file` == 0 ] ; then 
            echo "log_ftp_protocol=YES" >>${file}.new 
         fi 
         /bin/mv ${file}.new $file 
         /bin/chmod 0600 $file 
         /bin/chown root:root $file 
      fi 
      echo "Section 5.2 completed."
      menu2=1
	flag2=1
   fi

	if ((test "$console_in" = "3" || test "$menu3" = "1" ) && ( test "$flag3" != "1") )
   then
      cd /var/log 
      /bin/chmod o-w boot.log* cron* dmesg ksyms* httpd/* \
            maillog* messages* news/* pgsql rpmpkgs* samba/* \
            scrollkeeper.log secure* spooler* squid/* vbox/* wtmp                        2> /dev/null
      /bin/chmod o-rx boot.log* cron* maillog* messages* pgsql \
            secure* spooler* squid/*                                                      2> /dev/null
      /bin/chmod g-w boot.log* cron* dmesg httpd/* ksyms* \
            maillog* messages* pgsql rpmpkgs* samba/* \
            scrollkeeper.log secure* spooler*                                              2> /dev/null
      /bin/chmod g-rx boot.log* cron* maillog* messages* pgsql \
            secure* spooler*                                                                 2> /dev/null
      /bin/chmod o-w gdm/ httpd/ news/ samba/ squid/ vbox/  dmesg scrollkeeper.log sa lastlog      2> /dev/null
      /bin/chmod o-rx httpd/ samba/ squid/ sa lastlog dmesg scrollkeeper.log                       2> /dev/null
      /bin/chmod 600 wtmp* /var/run/utmp*                                                          2> /dev/null
      /bin/chmod g-w gdm/ httpd/ news/ samba/ squid/ vbox/ sa lastlog dmesg scrollkeeper.log wtmp  2> /dev/null
      /bin/chmod g-rx httpd/ samba/ sa lastlog                                                     2> /dev/null
      /bin/chmod o-rwx vbox samba/* rpmpkgs                                                        2> /dev/null
      /bin/chmod g-rwx samba/* rpmpkgs                                                             2> /dev/null
      /bin/chmod u-x lastlog                                                                       2> /dev/null
      /bin/chmod g-rwx,o-rwx /var/log/boot.log                                                     2> /dev/null
      /bin/chmod g-w,o-w /var/log/gdm                                                              2> /dev/null
      /bin/chown -R root:root .                                                                    2> /dev/null
      /bin/chgrp utmp wtmp btmp                                                                    2> /dev/null
      if [ -e news ]; then /bin/chown -R news:news news;fi
      if [ -e pgsql ]; then /bin/chown postgres:postgres pgsql;fi
      if [ -e squid ]; then /bin/chown -R squid:squid squid;fi
        
#limit the usability of /usr/bin/who
        /bin/chmod 750 /usr/bin/who
# Fixing "/etc/rc.d/rc.sysinit", as it unsecures permissions for wtmp.
        awk '( $1 == "chmod" && $2 == "0664" && $3 == "/var/run/utmp" && $4 == "/var/log/wtmp" ) {
print "chmod 0600 /var/run/utmp /var/log/wtmp"; next }; 
( $1 == "chmod" && $2 == "0664" && $3 == "/var/run/utmpx" && $4 == "/var/log/wtmpx" ) {
print " chmod 0600 /var/run/utmpx /var/log/wtmpx"; next };
{ print }' /etc/rc.d/rc.sysinit>/etc/rc.d/rc.sysinit.cisNEW
        cp /etc/rc.d/rc.sysinit.cisNEW /etc/rc.d/rc.sysinit
        /bin/chown root:root /etc/rc.d/rc.sysinit
        /bin/chmod 0700 /etc/rc.d/rc.sysinit
        echo "Section 5.3 completed."
        menu3=1
        flag3=1
    fi

    if test "$automatic" = "1"
    then
        console_in=0
    fi

done
